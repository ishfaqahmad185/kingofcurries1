
@{
    ViewData["Title"] = "Reset Password";


    TempData.Keep("Email");
    TempData.Keep("UserId");
    TempData.Keep("UserName");
}



<style>
    .invalid-feedback2 {
        display: block;
        width: 100%;
        margin-top: 0.25rem;
        font-size: 80%;
        color: #dc3545;
    }

    .invalid-feedback {
        display: none;
    }
    .textboxstyle {
        display: block;
        width: 100%;
        height: 2.875rem;
        padding: 0.875rem 1.375rem;
        padding-right: 1.375rem;
        font-size: 1.275rem;
        font-weight: 400;
        line-height: 1;
        color: #495057;
        background-color: #ffffff;
        background-clip: padding-box;
        border: 1px solid #ced4da;
        border-radius: 2px;
        transition: border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;
        border-color: #dc3545;
        padding-right: calc(1.5em + 0.75rem);
        background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' width='12' height='12' fill='none' stroke='%23dc3545' viewBox='0 0 12 12'%3e%3ccircle cx='6' cy='6' r='4.5'/%3e%3cpath stroke-linejoin='round' d='M5.8 3.6h.4L6 6.5z'/%3e%3ccircle cx='6' cy='8.2' r='.6' fill='%23dc3545' stroke='none'/%3e%3c/svg%3e");
        background-repeat: no-repeat;
        background-position: right calc(0.375em + 0.1875rem) center;
        background-size: calc(0.75em + 0.375rem) calc(0.75em + 0.375rem);
    }

        .textboxstyle:focus {
            color: #495057;
            background-color: #fff;
            border-color: #dc3545;
            outline: 0;
            box-shadow: 0 0 0 0.2rem rgba(246, 204, 208, 0.25);
        }
</style>

<div class="breadcumb-wrapper" data-bg-src="../../images/Banner/5.jpg">
    <div class="container z-index-common">
        <div class="breadcumb-content">
            <h1 class="breadcumb-title">Reset <span class="font-style text-theme2">Password</span></h1>
            <ul class="breadcumb-menu">
                <li><a href="/" style="color:#D8962B !important;" >Home</a></li>
                <li>Reset Password</li>
            </ul>
        </div>
    </div>
</div>

<section class="space">
    <div class="container">
<form class="forms-sample" asp-action="ResetPassword" method="post" id="ChangeAdminUserForm">
    @if (ViewBag.Error == 2)
    {
          <div class="row m-5" >
                    <div class="col-sm-12">
                        <div class="alert alert-danger alert-dismissible d-flex align-items-center" role="alert">
                            <svg class="bi flex-shrink-0 me-2" width="24" height="24" role="img" aria-label="Danger:"><use xlink:href="#exclamation-triangle-fill"/></svg>
                            <div>
                                <strong>Error! </strong>  
           Incorrect Password
                                <button type="button" class="btn-close text-danger" data-bs-dismiss="alert" aria-label="Close"><strong>x</strong></button>
                            </div>
                        </div>
                    </div>
                    </div>
      
    }
    <div class="form-group row m-3">
        <div class="col-md-2"></div>
        <div class="col-md-4 ">
            <div class="card">

                <div class="card-body ">

                   

                    <div class="form-group">
                        <label for="validationCustom04" class="col-form-label">Login Password *</label>
                        <div class="">
                            <input type="hidden" id="hdnEmail" name="hdnEmail" value="@TempData["Email"]" />
                            <input type="hidden" id="hdnUserNameCheck" name="hdnUserNameCheck" value="@TempData["UserName"]" />
                            <input type="password" name="newPassword"  class="form-control" placeholder="Password" id="validationCustom04" required />

                            <div class="invalid-feedback" id="PasswordAlertLabel">
                                Invalid Password
                            </div>
                        </div>
                    </div>

                    <div class="form-group mt-4">
                        <label for="ConfirmPassword" class="form-label">Confirm Password *</label>
                        <div class="">

                            <input type="password" class="form-control" placeholder="Confirm Password" id="ConfirmPassword" required />

                            <div class="invalid-feedback" id="ConfirmPasswordAlertLabel">
                               Invalid Confirm Password
                            </div>
                        </div>

                    </div>


                    <div class="form-group mt-5">

                        <button id="ChangePassAdmin" class="btn btn-outline btn-primary btn-block btn-sm  " data-toggle="tooltip" data-placement="bottom" title="Change"><i class="mdi mdi-content-save text-white"></i>Change</button>

                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-1"></div>
        <div class="col-md-4">
            <ul>
            <li>Password field required</li>
            <li>password must be atleast 8 character long</li>
            <li>password must contain atleast 1 Upper Case letter</li>
            <li>password must contain atleast 1 Lower Case letter</li>
            <li>password must contain atleast 1 Numeric Digit</li>
            <li>password must contain atleast 1 Special Character Like !#$%</li>
            <li>password must not contain User First Name or Last Name</li>
            <li>password must not contain Sequence of Character of digits number </li>
            <li>password must not contain Your First Name & Last Name </li>
                <li>Confirm Password must Match Password</li>
            </ul>
        </div>

    </div>
</form>
</div>
</section>


@section Scripts{

    <script>

        $('#validationCustom04').keyup(function () {
            var Check = CheckValidation();
            if (check) {

                $('#PasswordAlertLabel').attr('class', 'invalid-feedback');
                $('#validationCustom04').attr('class', 'form-control');
            }
        });

        function CheckValidation() {
            var check = true;
            
            var Passwordcheck = document.getElementById('validationCustom04').value;

            if ($("#validationCustom04").val().length < 8) {


                check = false;
            }
            else if (!/\d/.test($("#validationCustom04").val())) {

                check = false;
            }
            else if
                (!/[a-z]/.test($("#validationCustom04").val())) {


                check = false;
            }
            else if (!/[A-Z]/.test($("#validationCustom04").val())) {


                check = false;
            } else if (!/([~,!,@@,#,$,%,^,&,*,-,_,+,=,?,>,<])/.test($("#validationCustom04").val())) {


                check = false;
            }
           


            if (check == false) {

                $('#PasswordAlertLabel').attr('class', 'invalid-feedback2');
                $('#validationCustom04').attr('class', 'form-control textboxstyle');

                return false;
                $('#AddUserPopUp').modal('show');
            }
            else {

                $('#PasswordAlertLabel').attr('class', 'invalid-feedback');
                $('#validationCustom04').attr('class', 'form-control');
                return true;
            }

        }

        $(function () {
            $("#ChangePassAdmin").on("click", function (e) {

                var form = $("#ChangeAdminUserForm")[0];
                var isValid = form.checkValidity();
                var passwordCheck = CheckValidation();
                var ConfirmPassword = CheckConfirmPassword();

                if (!isValid) {

                    e.preventDefault();
                    e.stopPropagation();
                }
                else if (!passwordCheck) {
                    e.preventDefault();
                    e.stopPropagation();
                }
                else if (!ConfirmPassword) {

                    e.preventDefault();
                    e.stopPropagation();
                }
                else {
                    return true;
                }
                form.classList.add('was-validated');
                return false; // For testing only to stay on this page
            });
        });


        function CheckConfirmPassword() {

            var Password = document.getElementById('validationCustom04').value;
            var ConfirmPassword = document.getElementById('ConfirmPassword').value;

            if (!(Password === ConfirmPassword)) {

                $('#ConfirmPasswordAlertLabel').attr('class', 'invalid-feedback2');
                $('#ConfirmPassword').attr('class', 'form-control  textboxstyle');

                return false;
                $('#AddUserPopUp').modal('show');

            }
            else {

                $('#ConfirmPasswordAlertLabel').attr('class', 'invalid-feedback');
                $('#ConfirmPassword').attr('class', 'form-control');
                return true;
            }
        }
        $('#ConfirmPassword').keyup(function () {
            var Check = CheckConfirmPassword();
            if (check) {

                $('#ConfirmPasswordAlertLabel').attr('class', 'invalid-feedback');
                $('#ConfirmPassword').attr('class', 'form-control');
            }
        });
    </script>
}

